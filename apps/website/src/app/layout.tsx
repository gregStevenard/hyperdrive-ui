import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";

import { ThemeProvider } from 'next-themes'

import { css, cx } from 'styled-system/css'
import { inter, jakarta, outfit, raleway, roboto } from './fonts'
import { Flex } from "styled-system/jsx";
import { Navbar } from "~/components/navigation/navbar";
import "./globals.css";
// import 'styled-system/styles.css'
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html 
      lang="en"
      className={cx(
        outfit.variable,
        inter.variable,
        jakarta.variable,
        raleway.variable,
        roboto.variable,
      )}
      suppressHydrationWarning
    >
      <head>
        <style id="hyperdrive-ui-gray" />
        <style id="hyperdrive-ui-accent" />
      </head>

      <body>
        <ThemeProvider attribute="class" disableTransitionOnChange>
          {/* <Flex>
            <p 
            className={css({ color: 'red' })}
            >Hi there</p>
            Hi there
          </Flex> */}
          <Navbar />
          {children}

        </ThemeProvider>
      </body>
    </html>
  );
}
